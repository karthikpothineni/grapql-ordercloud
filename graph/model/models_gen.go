// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type CategoryItems struct {
	ID          string           `json:"ID"`
	Name        string           `json:"Name"`
	Description string           `json:"Description"`
	ListOrder   int              `json:"ListOrder"`
	Active      bool             `json:"Active"`
	ParentID    string           `json:"ParentID"`
	ChildCount  int              `json:"ChildCount"`
	Xp          interface{}      `json:"Xp"`
	ChildData   []*CategoryItems `json:"ChildData"`
}

type CategoryMeta struct {
	Page        int    `json:"Page"`
	PageSize    int    `json:"PageSize"`
	TotalCount  int    `json:"TotalCount"`
	TotalPages  int    `json:"TotalPages"`
	ItemRange   []*int `json:"ItemRange"`
	NextPageKey string `json:"NextPageKey"`
}

type CategoryResponse struct {
	Meta  *CategoryMeta    `json:"Meta"`
	Items []*CategoryItems `json:"Items"`
}

type Draft struct {
	ID              *string `json:"ID"`
	Status          *string `json:"Status"`
	RejectionReason *string `json:"RejectionReason"`
}

type GetBuySku struct {
	Sku *string `json:"SKU"`
	Qty *string `json:"Qty"`
}

type Inventory struct {
	Enabled              *bool      `json:"Enabled"`
	NotificationPoint    *string    `json:"NotificationPoint"`
	VariantLevelTracking *bool      `json:"VariantLevelTracking"`
	OrderCanExceed       *bool      `json:"OrderCanExceed"`
	QuantityAvailable    *int       `json:"QuantityAvailable"`
	LastUpdated          *time.Time `json:"LastUpdated"`
}

type LatestProductItems struct {
	Draft         *Draft                   `json:"Draft"`
	ID            *string                  `json:"Id"`
	Variants      []*string                `json:"Variants"`
	Specs         []*string                `json:"Specs"`
	PriceSchedule *NewProductPriceSchedule `json:"PriceSchedule"`
	Product       *ProductItem             `json:"Product"`
}

type NewProductPriceSchedule struct {
	OwnerID               *string       `json:"OwnerID"`
	ID                    *string       `json:"ID"`
	Name                  *string       `json:"Name"`
	ApplyTax              *bool         `json:"ApplyTax"`
	ApplyShipping         *bool         `json:"ApplyShipping"`
	MinQuantity           *int          `json:"MinQuantity"`
	MaxQuantity           *int          `json:"MaxQuantity"`
	UseCumulativeQuantity *bool         `json:"UseCumulativeQuantity"`
	RestrictedQuantity    *bool         `json:"RestrictedQuantity"`
	Currency              *string       `json:"Currency"`
	SaleStart             *string       `json:"SaleStart"`
	SaleEnd               *string       `json:"SaleEnd"`
	IsOnSale              *bool         `json:"IsOnSale"`
	PriceBreaks           []*PriceBreak `json:"PriceBreaks"`
}

type OrderCloudMeta struct {
	Page        *int    `json:"Page"`
	PageSize    *int    `json:"PageSize"`
	TotalCount  *int    `json:"TotalCount"`
	TotalPages  *int    `json:"TotalPages"`
	ItemRange   []*int  `json:"ItemRange"`
	NextPageKey *string `json:"NextPageKey"`
}

type PriceBreak struct {
	Quantity  *int     `json:"Quantity"`
	Price     *float64 `json:"Price"`
	SalePrice *float64 `json:"SalePrice"`
}

type PriceScheduleItem struct {
	OwnerID               *string          `json:"OwnerID"`
	ID                    *string          `json:"ID"`
	Name                  *string          `json:"Name"`
	ApplyTax              *bool            `json:"ApplyTax"`
	ApplyShipping         *bool            `json:"ApplyShipping"`
	MinQuantity           *int             `json:"MinQuantity"`
	MaxQuantity           *int             `json:"MaxQuantity"`
	UseCumulativeQuantity *bool            `json:"UseCumulativeQuantity"`
	RestrictedQuantity    *bool            `json:"RestrictedQuantity"`
	PriceBreaks           []*PriceBreak    `json:"PriceBreaks"`
	Currency              *string          `json:"Currency"`
	SaleStart             *string          `json:"SaleStart"`
	SaleEnd               *string          `json:"SaleEnd"`
	IsOnSale              *bool            `json:"IsOnSale"`
	Xp                    *PriceScheduleXp `json:"XP"`
}

type PriceScheduleResponse struct {
	Meta  *OrderCloudMeta      `json:"Meta"`
	Items []*PriceScheduleItem `json:"Items"`
}

type PriceScheduleXp struct {
	Type *string `json:"Type"`
}

type ProductBatch struct {
	BatchNumber         interface{} `json:"BatchNumber"`
	BatchExpirationDate *string     `json:"BatchExpirationDate"`
	BatchStockQuantity  *int        `json:"BatchStockQuantity"`
}

type ProductDocument struct {
	FileName *string `json:"FileName"`
	URL      *string `json:"Url"`
}

type ProductFacet struct {
	Supplier []*string `json:"Supplier"`
}

type ProductFilter struct {
	FilterKey   *string `json:"filterKey"`
	FilterCount *int    `json:"filterCount"`
}

type ProductImage struct {
	ThumbnailURL *string   `json:"ThumbnailUrl"`
	URL          *string   `json:"Url"`
	Tags         []*string `json:"Tags"`
}

type ProductItem struct {
	OwnerID                *string            `json:"OwnerID"`
	DefaultPriceScheduleID *string            `json:"DefaultPriceScheduleID"`
	AutoForward            *bool              `json:"AutoForward"`
	ID                     *string            `json:"ID"`
	Name                   *string            `json:"Name"`
	Description            *string            `json:"Description"`
	QuantityMultiplier     *int               `json:"QuantityMultiplier"`
	ShipWeight             *float64           `json:"ShipWeight"`
	ShipHeight             *float64           `json:"ShipHeight"`
	ShipWidth              *float64           `json:"ShipWidth"`
	ShipLength             *float64           `json:"ShipLength"`
	Active                 *bool              `json:"Active"`
	SpecCount              *int               `json:"SpecCount"`
	VariantCount           *int               `json:"VariantCount"`
	ShipFromAddressID      *string            `json:"ShipFromAddressID"`
	Inventory              *Inventory         `json:"Inventory"`
	DefaultSupplierID      *string            `json:"DefaultSupplierID"`
	AllSuppliersCanSell    *bool              `json:"AllSuppliersCanSell"`
	Returnable             *bool              `json:"Returnable"`
	Xp                     *ProductXp         `json:"XP"`
	IsFavorite             bool               `json:"IsFavorite"`
	PriceSchedule          *PriceScheduleItem `json:"PriceSchedule"`
}

type ProductMeta struct {
	Facets      interface{} `json:"Facets"`
	Page        *int        `json:"Page"`
	PageSize    *int        `json:"PageSize"`
	TotalCount  *int        `json:"TotalCount"`
	TotalPages  *int        `json:"TotalPages"`
	ItemRange   []*int      `json:"ItemRange"`
	NextPageKey *string     `json:"NextPageKey"`
}

type ProductPromotions struct {
	ID                     *string              `json:"ID"`
	LineItemLevel          *bool                `json:"LineItemLevel"`
	Code                   *string              `json:"Code"`
	Name                   *string              `json:"Name"`
	RedemptionLimit        *string              `json:"RedemptionLimit"`
	RedemptionLimitPerUser *float64             `json:"RedemptionLimitPerUser"`
	RedemptionCount        *int                 `json:"RedemptionCount"`
	Description            *string              `json:"Description"`
	FinePrint              *string              `json:"FinePrint"`
	StartDate              *string              `json:"StartDate"`
	ExpirationDate         *string              `json:"ExpirationDate"`
	EligibleExpression     *string              `json:"EligibleExpression"`
	ValueExpression        *string              `json:"ValueExpression"`
	CanCombine             *bool                `json:"CanCombine"`
	AllowAllBuyers         *bool                `json:"AllowAllBuyers"`
	OwnerID                *string              `json:"OwnerID"`
	Xp                     *ProductPromotionsXp `json:"xp"`
}

type ProductPromotionsXp struct {
	Type            *string                    `json:"Type"`
	Value           *int                       `json:"Value"`
	AppliesTo       *string                    `json:"AppliesTo"`
	ScopeToSupplier *bool                      `json:"ScopeToSupplier"`
	Supplier        *string                    `json:"Supplier"`
	Automatic       *bool                      `json:"Automatic"`
	MaxShipCost     *string                    `json:"MaxShipCost"`
	Buyers          []*string                  `json:"Buyers"`
	Bogo            *ProductPromotionsXpBogo   `json:"BOGO"`
	MinReq          *ProductPromotionsXpMinReq `json:"MinReq"`
	SKUs            []*string                  `json:"SKUs"`
}

type ProductPromotionsXpBogo struct {
	Type   *string    `json:"Type"`
	Value  *string    `json:"Value"`
	GetSku *GetBuySku `json:"GetSKU"`
	BuySku *GetBuySku `json:"BuySKU"`
}

type ProductPromotionsXpMinReq struct {
	Type *string `json:"Type"`
	Int  *int    `json:"Int"`
}

type ProductResponse struct {
	Meta  *ProductMeta   `json:"Meta"`
	Items []*ProductItem `json:"Items"`
}

type ProductResponseV2 struct {
	Meta  *ProductMeta          `json:"Meta"`
	Items []*LatestProductItems `json:"Items"`
}

type ProductTax struct {
	Description     *string `json:"Description"`
	LongDescription *string `json:"LongDescription"`
	Code            *string `json:"Code"`
}

type ProductXp struct {
	Company                   *string              `json:"Company"`
	Status                    *string              `json:"Status"`
	ArtworkRequired           *bool                `json:"ArtworkRequired"`
	ProductRegistrationNumber *string              `json:"ProductRegistrationNumber"`
	Facets                    *ProductFacet        `json:"Facets"`
	Manufacturer              *string              `json:"Manufacturer"`
	FreeShipping              *bool                `json:"FreeShipping"`
	UnitOfMeasure             *UnitOfMeasure       `json:"UnitOfMeasure"`
	Images                    []*ProductImage      `json:"Images"`
	ProductType               *string              `json:"ProductType"`
	CountryOfOrigin           *string              `json:"CountryOfOrigin"`
	PromotionEligible         *bool                `json:"PromotionEligible"`
	PromotionExists           *bool                `json:"PromotionExists"`
	Workflow                  *Workflow            `json:"Workflow"`
	ProductBatch              *ProductBatch        `json:"ProductBatch"`
	Tax                       *ProductTax          `json:"Tax"`
	TherapeuticClass          *string              `json:"TherapeuticClass"`
	HasVariants               *bool                `json:"HasVariants"`
	Accessorials              []*string            `json:"Accessorials"`
	FreeShippingMessage       *string              `json:"FreeShippingMessage"`
	IsResale                  *bool                `json:"IsResale"`
	Brand                     *string              `json:"Brand"`
	CustomerRating            *string              `json:"CustomerRating"`
	SizeTier                  *string              `json:"SizeTier"`
	IntegrationData           *string              `json:"IntegrationData"`
	Notes                     *string              `json:"Notes"`
	Currency                  *string              `json:"Currency"`
	Documents                 []*ProductDocument   `json:"Documents"`
	Promotions                []*ProductPromotions `json:"Promotions"`
	SupplierImage             *string              `json:"SupplierImage"`
}

type RecentSearch struct {
	ID            *int       `json:"ID" structs:"id" db:"id"`
	UserID        *string    `json:"UserID" structs:"user_id" db:"user_id"`
	SearchKeyword *string    `json:"SearchKeyword" structs:"search_keyword" db:"search_keyword"`
	CreatedAt     *time.Time `json:"CreatedAt" structs:"created_at" db:"created_at"`
}

type TrendingProduct struct {
	ProductID  *string `json:"ProductID" structs:"product_id" db:"product_id"`
	OrderCount *int    `json:"OrderCount" structs:"order_count" db:"order_count"`
	Quantity   *int    `json:"Quantity" structs:"quantity" db:"quantity"`
}

type UnitOfMeasure struct {
	Qty  *int    `json:"Qty"`
	Unit *string `json:"Unit"`
}

type UserProductFavorite struct {
	ID        *int       `json:"ID" structs:"id" db:"id"`
	UserID    *string    `json:"UserID" structs:"user_id" db:"user_id"`
	ProductID *string    `json:"ProductID" structs:"product_id" db:"product_id"`
	CreatedAt *time.Time `json:"CreatedAt" structs:"created_at" db:"created_at"`
}

type Workflow struct {
	RejectionReasons *string `json:"RejectionReasons"`
}
